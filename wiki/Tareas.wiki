#summary Las tareas a realizar

Como veréis casi todo el esqueleto de la práctica está implementado, además de algunas cosas extra. A continuación se detalla el trabajo pendiente. Todavía tenemos que terminar algunas de las clases que faltan, por lo que la idea es que veáis lo que queda, os lo vayáis repartiendo durante el día de mañana (martes) y mientras tanto nosotros terminaremos esas clases, para que lo tengáis todo listo para trabajar.

Quedan pendientes las siguientes clases:

  * [http://code.google.com/p/scheduling-algorithms/wiki/GUIScheduler GUI Scheduler]
  * [http://code.google.com/p/scheduling-algorithms/wiki/GUITareas GUI Tareas]
  * [http://code.google.com/p/scheduling-algorithms/wiki/GUIResultados GUI] resultados: presentar los resultados (en formato textual y numérico) y permitir guardarlos en un fichero de texto para dibujar las gráficas especificadas en el enunciado. El fichero debe estar en un formato compatible con !OpenOffice para poder crear las gráficas.
  * Planificación de tareas periódicas: Scheduler
  * Planificación de tareas aperiódicas: BS, PS, DS, PE y SS
  * Importer/Exporter: cambiar el odt que nos pasó el profesor a un formato fácil de manejar por la aplicación e importar los datos propiamente dichos, para rellenar las estructuras de datos. Tener en cuenta que puede haber más de 2 conjuntos de tareas, y distinguir entre servidores y tareas periódicas. El Exporter permite exportar los datos (tareas, servidores) a un nuevo fichero, con el mismo formato que el que importamos con el Importer.

Para que podáis ver más en detalle el funcionamiento y estructura de cada clase he subido el javadoc (incompleto) en la sección de Descargas: http://scheduling-algorithms.googlecode.com/files/javadoc.rar.

Algunas clases requieren mucho trabajo y otras más bien poco, por lo que puede haber clases en las que haya asignada más de una persona y viceversa, personas que deban encargarse de más de una clase.

Repito, id haciendo el reparto a lo largo de mañana (martes) mientras nosotros terminamos lo que falta para que lo tengáis todo listo, así como el javadoc (versión completa). He creado una página para que os repartáis el trabajo: http://code.google.com/p/scheduling-algorithms/wiki/Asignacion